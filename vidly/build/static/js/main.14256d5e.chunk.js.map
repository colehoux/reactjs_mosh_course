{"version":3,"sources":["services/realLogService.js","services/httpService.js","services/movieService.js","services/genreService.js","components/common/pagination.jsx","components/common/listGroup.jsx","utils/paginate.js","components/common/like.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","services/authService.js","components/moviesTable.jsx","components/common/searchBox.jsx","components/movies.jsx","components/NavBar.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForm.jsx","components/loginForm.jsx","components/logout.jsx","services/userService.js","components/registerForm.jsx","components/customers.jsx","components/rentals.jsx","components/notFound.jsx","components/protectedRoute.jsx","App.js","index.js"],"names":["init","log","error","console","axios","defaults","baseURL","process","interceptors","response","use","status","toast","logger","Promise","reject","get","post","put","delete","setJwt","jwt","headers","common","movieUrl","id","getMovie","movieId","http","saveMovie","movie","_id","body","deleteMovie","getGenres","Pagination","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","_","range","aria-label","className","map","page","key","onClick","ListGroup","items","textProprety","valueProprety","onItemSelect","selectedItem","item","defaultProps","paginate","pageNumber","startIndex","slice","take","value","Like","props","liked","aria-hidden","style","cursor","onLike","TableHeader","raiseSort","path","sortColumn","order","onSort","renderSortIcon","column","this","columns","label","Component","TableBody","renderCell","content","createKey","data","Table","email","password","a","localStorage","setItem","getJwt","getItem","login","loginWithJwt","logout","removeItem","getCurrentUser","jwtDecode","ex","MoviesTable","Link","to","title","deleteColumn","onDelete","user","auth","isAdmin","push","movies","SearchBox","onChange","name","placeholder","e","currentTarget","Movies","state","genres","selectedGenre","searchQuery","handleDelete","originalMovies","filter","m","setState","handleLike","index","indexOf","handlePageChange","handleGenreSelect","genre","handleSort","handleSearch","query","getPagedData","allMovies","filtered","toLowerCase","trim","includes","orderBy","totalCount","length","splice","NavBar","type","data-toggle","data-target","aria-controls","aria-expanded","NavLink","Fragment","Input","rest","htmlFor","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","details","message","validateProprety","obj","handleSubmit","preventDefault","doSubmit","handleChange","input","errorMessage","disabled","MovieForm","genreId","numberInStock","dailyRentalRate","empty","string","required","number","integer","min","max","history","match","params","mapToViewModel","replace","populateGenres","populateMovie","onSubmit","renderInput","renderSelect","renderButton","LoginForm","username","location","window","from","pathname","Redirect","Logout","register","RegisterForm","userService","Customers","Rentals","NotFound","ProtectedRoute","component","render","Route","App","Switch","exact","ReactDOM","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.14256d5e.chunk.js","sourcesContent":["function init() {}\r\n\r\nfunction log(error) {\r\n    console.error(error);\r\n}\r\n\r\nexport default {\r\n    init,\r\n    log,\r\n};\r\n","import axios from \"axios\";\r\nimport logger from \"./realLogService\";\r\nimport { toast } from \"react-toastify\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.response.use(null, (error) => {\r\n    const expectedError =\r\n        error.response && error.response.status >= 400 && error.response.status < 500;\r\n    if (!expectedError) {\r\n        toast.error(\"An unexpected erro occurred!\");\r\n        logger.log(error);\r\n    }\r\n\r\n    return Promise.reject(error);\r\n});\r\nfunction setJwt(jwt) {\r\n    axios.defaults.headers.common[\"x-auth-token\"] = jwt;\r\n}\r\n\r\nexport default {\r\n    get: axios.get,\r\n    post: axios.post,\r\n    put: axios.put,\r\n    delete: axios.delete,\r\n    setJwt,\r\n};\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndpoint = `/movies`;\r\n\r\nfunction movieUrl(id) {\r\n    return `${apiEndpoint}/${id}`;\r\n}\r\n\r\nexport function getMovies() {\r\n    return http.get(apiEndpoint);\r\n}\r\n\r\nexport function getMovie(movieId) {\r\n    return http.get(movieUrl(movieId));\r\n}\r\n\r\nexport function saveMovie(movie) {\r\n    if (!movie._id) {\r\n        //New movie\r\n        delete movie._id;\r\n        return http.post(apiEndpoint, movie);\r\n    } else {\r\n        //Save movie\r\n        const body = { ...movie };\r\n        delete body._id;\r\n        return http.put(movieUrl(movie._id), body);\r\n    }\r\n}\r\n\r\nexport function deleteMovie(movieId) {\r\n    return http.delete(movieUrl(movieId));\r\n}\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndpoint = `/genres`;\r\n\r\nexport function getGenres() {\r\n    return http.get(apiEndpoint);\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport _ from \"lodash\";\r\n\r\nconst Pagination = ({ itemsCount, pageSize, currentPage, onPageChange }) => {\r\n    const pagesCount = Math.ceil(itemsCount / pageSize);\r\n\r\n    if (pagesCount === 1) return null;\r\n\r\n    const pages = _.range(1, pagesCount + 1);\r\n\r\n    return (\r\n        <nav aria-label=\"Page navigation\">\r\n            <ul className=\"pagination\">\r\n                {pages.map((page) => (\r\n                    <li\r\n                        key={page}\r\n                        className={\r\n                            page === currentPage\r\n                                ? \"page-item active\"\r\n                                : \"page-item\"\r\n                        }\r\n                    >\r\n                        <a\r\n                            className=\"page-link\"\r\n                            onClick={() => onPageChange(page)}\r\n                        >\r\n                            {page}\r\n                        </a>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nPagination.propTypes = {\r\n    itemsCount: PropTypes.number.isRequired,\r\n    pageSize: PropTypes.number.isRequired,\r\n    currentPage: PropTypes.number.isRequired,\r\n    onPageChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\n\r\nconst ListGroup = ({\r\n    items,\r\n    textProprety,\r\n    valueProprety,\r\n    onItemSelect,\r\n    selectedItem,\r\n}) => {\r\n    return (\r\n        <ul className=\"list-group\">\r\n            {items.map((item) => (\r\n                <li\r\n                    onClick={() => onItemSelect(item)}\r\n                    key={item[valueProprety]}\r\n                    className={\r\n                        item._id === selectedItem._id\r\n                            ? \"list-group-item active\"\r\n                            : \"list-group-item\"\r\n                    }\r\n                >\r\n                    {item[textProprety]}\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nListGroup.defaultProps = {\r\n    textProprety: \"name\",\r\n    valueProprety: \"_id\",\r\n};\r\n\r\nexport default ListGroup;\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n    const startIndex = (pageNumber - 1) * pageSize;\r\n    return _(items).slice(startIndex).take(pageSize).value();\r\n}\r\n","import React from \"react\";\r\n\r\nconst Like = (props) => {\r\n    // let classes = \"fa fa-heart\";\r\n    // if (!this.props.liked) classes += \"-o\";\r\n    return (\r\n        <i\r\n            className={\"fa fa-heart\" + (props.liked ? \"\" : \"-o\")}\r\n            // className={classes}\r\n            aria-hidden=\"true\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() => props.onLike()}\r\n        ></i>\r\n    );\r\n};\r\n\r\nexport default Like;\r\n","import React, { Component } from \"react\";\r\n\r\nclass TableHeader extends Component {\r\n    raiseSort = (path) => {\r\n        const sortColumn = { ...this.props.sortColumn };\r\n        if (sortColumn.path === path) {\r\n            sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n        } else {\r\n            sortColumn.path = path;\r\n            sortColumn.order = \"asc\";\r\n        }\r\n        this.props.onSort(sortColumn);\r\n    };\r\n    renderSortIcon = (column) => {\r\n        const { sortColumn } = this.props;\r\n        if (column.path !== sortColumn.path) return null;\r\n        if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\"></i>;\r\n        return <i className=\"fa fa-sort-desc\"></i>;\r\n    };\r\n    render() {\r\n        return (\r\n            <thead>\r\n                <tr>\r\n                    {this.props.columns.map((column) => (\r\n                        <th\r\n                            className=\"clickable\"\r\n                            key={column.path || column.key}\r\n                            onClick={() => this.raiseSort(column.path)}\r\n                        >\r\n                            {column.label} {this.renderSortIcon(column)}\r\n                        </th>\r\n                    ))}\r\n                </tr>\r\n            </thead>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nclass TableBody extends Component {\r\n    renderCell = (item, column) => {\r\n        if (column.content) return column.content(item);\r\n        return _.get(item, column.path);\r\n    };\r\n\r\n    createKey = (item, column) => {\r\n        return item._id + (column.path || column.key);\r\n    };\r\n\r\n    render() {\r\n        const { data, columns } = this.props;\r\n\r\n        return (\r\n            <tbody>\r\n                {data.map((item) => (\r\n                    <tr key={item._id}>\r\n                        {columns.map((column) => (\r\n                            <td key={this.createKey(item, column)}>\r\n                                {this.renderCell(item, column)}\r\n                            </td>\r\n                        ))}\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TableBody;\r\n","import React from \"react\";\r\nimport TableHeader from \"./tableHeader\";\r\nimport TableBody from \"./tableBody\";\r\n\r\nconst Table = ({ columns, sortColumn, onSort, data }) => {\r\n    return (\r\n        <table className=\"table\">\r\n            <TableHeader\r\n                columns={columns}\r\n                sortColumn={sortColumn}\r\n                onSort={onSort}\r\n            />\r\n            <TableBody data={data} columns={columns} />\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default Table;\r\n","import jwtDecode from \"jwt-decode\";\r\nimport http from \"./httpService\";\r\n\r\nconst apiEndpoint = `/auth`;\r\nconst tokenKey = \"token\";\r\n\r\nhttp.setJwt(getJwt());\r\n\r\nexport async function login(email, password) {\r\n    const { data: jwt } = await http.post(apiEndpoint, { email, password });\r\n\r\n    //window.location() instead of this.props.history.push() to reload the entire app to triggercomponentDidMount() to display user via localStorage (see App.js )\r\n    localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function loginWithJwt(jwt) {\r\n    localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function logout() {\r\n    localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function getCurrentUser() {\r\n    try {\r\n        const jwt = localStorage.getItem(tokenKey);\r\n        const user = jwtDecode(jwt);\r\n        return user;\r\n    } catch (ex) {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport function getJwt() {\r\n    return localStorage.getItem(tokenKey);\r\n}\r\n\r\nexport default {\r\n    login,\r\n    loginWithJwt,\r\n    logout,\r\n    getCurrentUser,\r\n    getJwt,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Like from \"./common/like\";\r\nimport Table from \"./common/table\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass MoviesTable extends Component {\r\n    columns = [\r\n        {\r\n            path: \"title\",\r\n            label: \"Title\",\r\n            content: (movie) => <Link to={`/movies/${movie._id}`}>{movie.title}</Link>,\r\n        },\r\n        { path: \"genre.name\", label: \"Genre\" },\r\n        { path: \"numberInStock\", label: \"Stock\" },\r\n        { path: \"dailyRentalRate\", label: \"Rate\" },\r\n        {\r\n            key: \"like\",\r\n            content: (movie) => (\r\n                <Like onLike={() => this.props.onLike(movie)} liked={movie.liked} />\r\n            ),\r\n        },\r\n    ];\r\n\r\n    deleteColumn = {\r\n        key: \"delete\",\r\n        content: (movie) => (\r\n            <button onClick={() => this.props.onDelete(movie._id)} className=\"btn btn-danger\">\r\n                Delete\r\n            </button>\r\n        ),\r\n    };\r\n\r\n    constructor() {\r\n        super();\r\n        const user = auth.getCurrentUser();\r\n        if (user && user.isAdmin) this.columns.push(this.deleteColumn);\r\n    }\r\n    render() {\r\n        const { movies, onSort, sortColumn } = this.props;\r\n        return (\r\n            <Table columns={this.columns} data={movies} sortColumn={sortColumn} onSort={onSort} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default MoviesTable;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({ value, onChange }) => {\r\n    return (\r\n        <input\r\n            name=\"query\"\r\n            className=\"form-control my-3\"\r\n            placeholder=\"Search...\"\r\n            value={value}\r\n            onChange={(e) => onChange(e.currentTarget.value)}\r\n        ></input>\r\n    );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from \"react\";\r\n// import { deleteMovie } from \"../services/fakeMovieService\";\r\nimport { getMovies, deleteMovie } from \"../services/movieService\";\r\nimport { getGenres } from \"../services/genreService\";\r\nimport Pagination from \"./common/pagination\";\r\nimport ListGroup from \"./common/listGroup\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport MoviesTable from \"./moviesTable\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport _ from \"lodash\";\r\nimport SearchBox from \"./common/searchBox\";\r\n\r\nclass Movies extends Component {\r\n    state = {\r\n        movies: [],\r\n        genres: [],\r\n        currentPage: 1,\r\n        pageSize: 4,\r\n        sortColumn: { path: \"title\", order: \"asc\" },\r\n        selectedGenre: {},\r\n        searchQuery: \"\",\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const { data: genres } = await getGenres();\r\n        genres.splice(0, 0, { _id: \"\", name: \"All genres\" });\r\n\r\n        const { data: movies } = await getMovies();\r\n        this.setState({ movies, genres });\r\n    }\r\n    handleDelete = async (movieId) => {\r\n        const originalMovies = this.state.movies;\r\n        const movies = originalMovies.filter((m) => m._id !== movieId);\r\n        this.setState({ movies });\r\n\r\n        try {\r\n            await deleteMovie(movieId);\r\n        } catch (ex) {\r\n            if (ex.response && ex.response.status === 404)\r\n                toast.error(\"This movie has already been deleted.\");\r\n            this.setState({ movies: originalMovies });\r\n        }\r\n    };\r\n    handleLike = (movie) => {\r\n        const movies = [...this.state.movies];\r\n        const index = movies.indexOf(movie);\r\n        movies[index] = { ...movies[index] };\r\n        movies[index].liked = !movies[index].liked;\r\n        this.setState({ movies });\r\n    };\r\n    handlePageChange = (page) => {\r\n        this.setState({ currentPage: page });\r\n    };\r\n\r\n    handleGenreSelect = (genre) => {\r\n        this.setState({ selectedGenre: genre, currentPage: 1, searchQuery: \"\" });\r\n    };\r\n\r\n    handleSort = (sortColumn) => {\r\n        this.setState({ sortColumn });\r\n    };\r\n    handleSearch = (query) => {\r\n        this.setState({ searchQuery: query, selectedGenre: {}, currentPage: 1 });\r\n    };\r\n\r\n    getPagedData = () => {\r\n        const {\r\n            pageSize,\r\n            currentPage,\r\n            sortColumn,\r\n            movies: allMovies,\r\n            selectedGenre,\r\n            searchQuery,\r\n        } = this.state;\r\n\r\n        let filtered = allMovies;\r\n        if (searchQuery) {\r\n            filtered = allMovies.filter((movie) =>\r\n                movie.title.toLowerCase().trim().includes(searchQuery.toLowerCase().trim())\r\n            );\r\n        } else if (selectedGenre && selectedGenre._id) {\r\n            filtered = allMovies.filter((m) => m.genre._id === selectedGenre._id);\r\n        }\r\n        const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n        const movies = paginate(sorted, currentPage, pageSize);\r\n\r\n        return { totalCount: filtered.length, data: movies };\r\n    };\r\n\r\n    render() {\r\n        const { length: count } = this.state.movies;\r\n        const { pageSize, currentPage, sortColumn, genres, searchQuery } = this.state;\r\n        const { user } = this.props;\r\n\r\n        // if (count === 0) {\r\n        //     return <h4 className=\"my-4\">There are no movies in the database.</h4>;\r\n        // }\r\n\r\n        const { totalCount, data: movies } = this.getPagedData();\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-2\">\r\n                    <ListGroup\r\n                        items={genres}\r\n                        selectedItem={this.state.selectedGenre}\r\n                        onItemSelect={this.handleGenreSelect}\r\n                    />\r\n                </div>\r\n                <div className=\"col\">\r\n                    {user && (\r\n                        <Link to=\"/movies/new\" className=\"btn btn-primary mb-4\">\r\n                            New Movie\r\n                        </Link>\r\n                    )}\r\n                    <h4 className=\"mb-4\">Showing {totalCount} movies in the database</h4>\r\n                    <SearchBox onChange={this.handleSearch} value={searchQuery} />\r\n                    <MoviesTable\r\n                        movies={movies}\r\n                        onLike={this.handleLike}\r\n                        onDelete={this.handleDelete}\r\n                        onSort={this.handleSort}\r\n                        sortColumn={sortColumn}\r\n                    />\r\n                    {/* table.table>thead>tr>th*4 */}\r\n                    <Pagination\r\n                        itemsCount={totalCount}\r\n                        pageSize={pageSize}\r\n                        currentPage={currentPage}\r\n                        onPageChange={this.handlePageChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Movies;\r\n","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nconst NavBar = ({ user }) => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <Link className=\"navbar-brand\" to=\"/\">\r\n                Vidly\r\n            </Link>\r\n            <button\r\n                className=\"navbar-toggler\"\r\n                type=\"button\"\r\n                data-toggle=\"collapse\"\r\n                data-target=\"#navbarNav\"\r\n                aria-controls=\"navbarNav\"\r\n                aria-expanded=\"false\"\r\n                aria-label=\"Toggle navigation\"\r\n            >\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\" to=\"/movies\">\r\n                            Movies\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\" to=\"/customers\">\r\n                            Customers\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\" to=\"/rentals\">\r\n                            Rentals\r\n                        </NavLink>\r\n                    </li>\r\n                    {!user && (\r\n                        <React.Fragment>\r\n                            <li className=\"nav-item\">\r\n                                <NavLink className=\"nav-link\" to=\"/login\">\r\n                                    Login\r\n                                </NavLink>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <NavLink className=\"nav-link\" to=\"/register\">\r\n                                    Register\r\n                                </NavLink>\r\n                            </li>\r\n                        </React.Fragment>\r\n                    )}\r\n                    {user && (\r\n                        <React.Fragment>\r\n                            <li className=\"nav-item\">\r\n                                <NavLink className=\"nav-link\" to=\"/profile\">\r\n                                    {user.name}\r\n                                </NavLink>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <NavLink className=\"nav-link\" to=\"/logout\">\r\n                                    Logout\r\n                                </NavLink>\r\n                            </li>\r\n                        </React.Fragment>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\n\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input\r\n                {...rest}\r\n                name={name}\r\n                id={name}\r\n                className={`form-control ${error ? \"is-invalid\" : \"\"}`}\r\n            />\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nconst Select = ({ name, label, options, error, ...rest }) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <select\r\n                name={name}\r\n                id={name}\r\n                {...rest}\r\n                className={`custom-select ${error ? \"is-invalid\" : \"\"}`}\r\n            >\r\n                <option value=\"\" />\r\n                {options.map((option) => (\r\n                    <option key={option._id} value={option._id}>\r\n                        {option.name}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Select;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\n\r\nclass Form extends Component {\r\n    state = {\r\n        data: {},\r\n        errors: {},\r\n    };\r\n\r\n    validate = () => {\r\n        const options = { abortEarly: false };\r\n        const { error } = Joi.validate(this.state.data, this.schema, options);\r\n\r\n        if (!error) return null;\r\n\r\n        const errors = {};\r\n        for (let item of error.details) errors[item.path[0]] = item.message;\r\n\r\n        return errors;\r\n    };\r\n\r\n    validateProprety = ({ name, value }) => {\r\n        const obj = { [name]: value };\r\n        const schema = { [name]: this.schema[name] };\r\n        const { error } = Joi.validate(obj, schema);\r\n\r\n        return error ? error.details[0].message : null;\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const errors = this.validate();\r\n        this.setState({ errors: errors || {} });\r\n        if (errors) return;\r\n\r\n        this.doSubmit();\r\n    };\r\n\r\n    handleChange = ({ currentTarget: input }) => {\r\n        const errors = { ...this.state.errors };\r\n        const errorMessage = this.validateProprety(input);\r\n        if (errorMessage) errors[input.name] = errorMessage;\r\n        else delete errors[input.name];\r\n\r\n        const data = { ...this.state.data };\r\n        data[input.name] = input.value;\r\n        this.setState({ data, errors });\r\n    };\r\n\r\n    renderButton(label) {\r\n        return (\r\n            <button disabled={this.validate()} className=\"btn btn-primary\">\r\n                {label}\r\n            </button>\r\n        );\r\n    }\r\n    renderInput(name, label, type = \"text\") {\r\n        const { data, errors } = this.state;\r\n        return (\r\n            <Input\r\n                name={name}\r\n                label={label}\r\n                error={errors[name]}\r\n                type={type}\r\n                value={data[name]}\r\n                onChange={this.handleChange}\r\n            />\r\n        );\r\n    }\r\n\r\n    renderSelect(name, label, options) {\r\n        const { data, errors } = this.state;\r\n        return (\r\n            <Select\r\n                name={name}\r\n                value={data[name]}\r\n                label={label}\r\n                options={options}\r\n                onChange={this.handleChange}\r\n                error={errors[name]}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport { getGenres } from \"../services/genreService\";\r\nimport { getMovie, saveMovie } from \"../services/movieService\";\r\n\r\nclass MovieForm extends Form {\r\n    state = {\r\n        data: {\r\n            _id: \"\",\r\n            title: \"\",\r\n            genreId: \"\",\r\n            numberInStock: \"\",\r\n            dailyRentalRate: \"\",\r\n        },\r\n        genres: [],\r\n        errors: {},\r\n    };\r\n\r\n    schema = {\r\n        _id: Joi.empty(),\r\n        title: Joi.string().required().label(\"Title\"),\r\n        genreId: Joi.string().required().label(\"Genre\"),\r\n        numberInStock: Joi.number().integer().min(0).max(100).required().label(\"Number in Stock\"),\r\n        dailyRentalRate: Joi.number().min(0).max(10).required().label(\"Rate\"),\r\n    };\r\n\r\n    async populateGenres() {\r\n        const { data: genres } = await getGenres();\r\n        this.setState({ genres });\r\n    }\r\n\r\n    async populateMovie() {\r\n        try {\r\n            const movieId = this.props.match.params.id;\r\n            if (movieId === \"new\") return;\r\n            const { data: movie } = await getMovie(movieId);\r\n            this.setState({ data: this.mapToViewModel(movie) });\r\n        } catch (ex) {\r\n            if (ex.response && ex.response.status === 404) {\r\n                this.props.history.replace(\"/not-found\");\r\n            }\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.populateGenres();\r\n\r\n        await this.populateMovie();\r\n    }\r\n\r\n    mapToViewModel(movie) {\r\n        return {\r\n            _id: movie._id,\r\n            title: movie.title,\r\n            genreId: movie.genre._id,\r\n            numberInStock: movie.numberInStock,\r\n            dailyRentalRate: movie.dailyRentalRate,\r\n        };\r\n    }\r\n\r\n    doSubmit = async () => {\r\n        const res = await saveMovie(this.state.data);\r\n        this.props.history.push(\"/movies\");\r\n    };\r\n\r\n    render() {\r\n        const { genres, data } = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                <div>\r\n                    <h1>Movie Form {data._id && data._id}</h1>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        {this.renderInput(\"title\", \"Title\")}\r\n                        {this.renderSelect(\"genreId\", \"Genre\", genres)}\r\n                        {this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\")}\r\n                        {this.renderInput(\"dailyRentalRate\", \"Rate\")}\r\n                        {this.renderButton(\"Save\")}\r\n                    </form>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MovieForm;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport { Redirect } from \"react-router\";\r\nimport Form from \"./common/form\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass LoginForm extends Form {\r\n    state = {\r\n        data: { username: \"\", password: \"\" },\r\n        errors: {},\r\n    };\r\n\r\n    schema = {\r\n        username: Joi.string().required().label(\"Username\"),\r\n        password: Joi.string().required().label(\"Password\"),\r\n    };\r\n\r\n    doSubmit = async () => {\r\n        //Call the server, save changes, redirect\r\n        const { data } = this.state;\r\n\r\n        try {\r\n            await auth.login(data.username, data.password);\r\n\r\n            const { state } = this.props.location;\r\n            window.location = state ? state.from.pathname : \"/\";\r\n        } catch (ex) {\r\n            if (ex.response && ex.response.status === 400) {\r\n                const errors = { ...this.state.errors };\r\n                errors.username = ex.response.data;\r\n                this.setState({ errors });\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (auth.getCurrentUser()) return <Redirect to=\"/\" />;\r\n\r\n        return (\r\n            <div>\r\n                <h1>Login</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    {this.renderInput(\"username\", \"Username\")}\r\n                    {this.renderInput(\"password\", \"Password\", \"password\")}\r\n                    {this.renderButton(\"Login\")}\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React, { Component } from \"react\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        auth.logout();\r\n        window.location = \"/\";\r\n    }\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default Logout;\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndpoint = `/users`;\r\n\r\nexport function register(user) {\r\n    return http.post(apiEndpoint, {\r\n        email: user.username,\r\n        password: user.password,\r\n        name: user.name,\r\n    });\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport * as userService from \"../services/userService\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass RegisterForm extends Form {\r\n    state = {\r\n        data: { username: \"\", password: \"\", name: \"\" },\r\n        errors: {},\r\n    };\r\n\r\n    schema = {\r\n        username: Joi.string().required().email().label(\"Username\"),\r\n        password: Joi.string().required().min(5).label(\"Password\"),\r\n        name: Joi.string().required().label(\"Name\"),\r\n    };\r\n\r\n    doSubmit = async () => {\r\n        //Call the server, save changes, redirect\r\n        try {\r\n            const response = await userService.register(this.state.data);\r\n            const jwt = response.headers[\"x-auth-token\"];\r\n            auth.loginWithJwt(jwt);\r\n            window.location = \"/\";\r\n        } catch (ex) {\r\n            if (ex.response && ex.response.status === 400) {\r\n                const errors = { ...this.state.errors };\r\n                errors.username = ex.response.data;\r\n                this.setState({ errors });\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Register</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    {this.renderInput(\"username\", \"Username\")}\r\n                    {this.renderInput(\"password\", \"Password\", \"password\")}\r\n                    {this.renderInput(\"name\", \"Name\")}\r\n                    {this.renderButton(\"Register\")}\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React from \"react\";\r\n\r\nconst Customers = () => {\r\n    return <h1>Customers</h1>;\r\n};\r\n\r\nexport default Customers;\r\n","import React from \"react\";\r\n\r\nconst Rentals = () => {\r\n    return <h1>Rentals</h1>;\r\n};\r\n\r\nexport default Rentals;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n    return <h1>Not found</h1>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router\";\r\nimport auth from \"../services/authService\";\r\n\r\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => {\r\n                if (!auth.getCurrentUser())\r\n                    return (\r\n                        <Redirect to={{ pathname: \"/login\", state: { from: props.location } }} />\r\n                    );\r\n                return Component ? <Component {...props} /> : render(props);\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { Component } from \"react\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { Redirect, Route, Switch } from \"react-router\";\r\nimport Movies from \"./components/movies\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport MovieForm from \"./components/movieForm\";\r\nimport LoginForm from \"./components/loginForm\";\r\nimport Logout from \"./components/logout\";\r\nimport RegisterForm from \"./components/registerForm\";\r\nimport Customers from \"./components/customers\";\r\nimport Rentals from \"./components/rentals\";\r\nimport NotFound from \"./components/notFound\";\r\nimport ProtectedRoute from \"./components/protectedRoute\";\r\nimport auth from \"./services/authService\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./index.css\";\r\n\r\nclass App extends Component {\r\n    state = {};\r\n\r\n    componentDidMount() {\r\n        const user = auth.getCurrentUser();\r\n        this.setState({ user });\r\n    }\r\n    render() {\r\n        const { user } = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                <ToastContainer />\r\n                <NavBar user={user} />\r\n                <main className=\"container\">\r\n                    <Switch>\r\n                        <Route path=\"/register\" component={RegisterForm} />\r\n                        <Route path=\"/login\" component={LoginForm} />\r\n                        <Route path=\"/logout\" component={Logout} />\r\n                        <ProtectedRoute path=\"/movies/:id\" component={MovieForm} />\r\n                        <Route\r\n                            path=\"/movies\"\r\n                            render={(props) => <Movies {...props} user={user} />}\r\n                        />\r\n                        <Route path=\"/customers\" component={Customers} />\r\n                        <Route path=\"/rentals\" component={Rentals} />\r\n                        <Route path=\"/not-found\" component={NotFound} />\r\n                        <Redirect from=\"/\" exact to=\"/movies\" />\r\n                        <Redirect to=\"/not-found\" />\r\n                    </Switch>\r\n                </main>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport logger from \"./services/realLogService\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"font-awesome/css/font-awesome.css\";\r\nimport App from \"./App\";\r\n\r\nconsole.log(\"SUPERMAN\", process.env.REACT_APP_NAME);\r\n\r\nlogger.init();\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}